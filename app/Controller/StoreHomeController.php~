<?php
App::uses('AppController', 'Controller');
App::uses('StoreHome', 'Model');
App::uses('Product', 'Model');

class StoreHomeController extends AppController
{
    var $uses = array(
        'StoreHome',
        'Product'
        );
    
    public function beforeFilter()
    {
        parent::beforeFilter();
    }
    
    
    public function constructClasses()
    {
        parent::constructClasses();
    }
    
    
    public function index() 
    {
        
    }
    
    public function indexStore() 
    {
        $this->StoreHome->recursive = 0;
        $this->set('storeIteams', $this->paginate());
    }
    
    
    public function add()
    {
        if ($this->request->is('post')) {
            $this->StoreHome->create();
            if ($this->StoreHome->save($this->request->data)) {
                $this->Session->setFlash(__('The StoreHome has been saved.'),
                    'default',
                    array('class'=>'message success')
                    );
                $this->redirect(array('action' => 'add'));
            } else {
                $this->Session->setFlash(__('The StoreHome could not be saved. Please, try again.'), 
                    'default',
                    array('class' => "message failure")
                    );
            }
        }
        $products  = $this->StoreHome->Product->find('list');
        $suppliers  = $this->StoreHome->Supplier->find('list');
        $this->set(compact('products', 'suppliers'));
    }
    
    
    public function edit($id = null)
    {
        /*$this->StoreHome->id = $id;
        if (!$this->StoreHome->exists()) {
            throw new NotFoundException(__('Invalid storeHome.'));
        }*/
        if ($this->request->is('post')) {
            if ($this->StoreHome->save($this->request->data)) {
                $this->Session->setFlash(__('The storeHome has been saved.'),
                    'default',
                    array('class'=>'message success')
                    );
                $this->redirect(array('action' => 'index'));
            } else {
                $this->Session->setFlash(__('The storeHome could not be saved. Please, try again.'), 
                    'default',
                    array('class' => "message failure")
                    );
            }
        } else {
            $this->request->data = $this->StoreHome->read(null, $id);
        }
        $products  = $this->StoreHome->Product->find('list');
        $suppliers = $this->StoreHome->Supplier->find('list');
        $this->set(compact('products', 'suppliers'));
    }
    
    
}
